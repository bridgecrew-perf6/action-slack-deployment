name: 'Slack Deployment Notification'

description: 'Publishes a deployment notification to Slack'

inputs:
  job-status:
    description: 'The status of the job'
    required: true
  environment:
    description: 'Environment name for the deployment (staging, uat, production)'
    required: true
  slack-webhook-url:
    description: 'Slack webhook url for publishing the message'
    required: true
  github-token:
    description: 'Github token to access the repository'
    required: true
  deployment-type:
    description: 'Optional deployment type (i.e. Application, Infrastructure)'
    required: false

runs:
  using: composite
  steps:
    - name: Format Slack deployment message
      id: format-message
      shell: bash
      run: |
        SLACK_MESSAGE="$(node $GITHUB_ACTION_PATH/utils/format_message.js)"
        SLACK_MESSAGE="${SLACK_MESSAGE//'%'/'%25'}"
        SLACK_MESSAGE="${SLACK_MESSAGE//$'\n'/'%0A'}"
        SLACK_MESSAGE="${SLACK_MESSAGE//$'\r'/'%0D'}"
        echo "::set-output name=SlackMessage::$SLACK_MESSAGE"
      env:
        ACTION_ENVIRONMENT: ${{ inputs.environment }}
        ACTION_DEPLOYMENT_TYPE: ${{ inputs.deployment-type }}
        ACTION_JOB_STATUS: ${{ inputs.job-status }}

    - name: Publish the notification to Slack
      uses: innocarpe/actions-slack@v1
      with:
        status: ${{ inputs.job-status }}
        success_text: '${{ steps.format-message.outputs.SlackMessage }}'
        failure_text: '${{ steps.format-message.outputs.SlackMessage }}'
        cancelled_text: '${{ steps.format-message.outputs.SlackMessage }}'
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        SLACK_WEBHOOK_URL: ${{ inputs.slack-webhook-url }}
